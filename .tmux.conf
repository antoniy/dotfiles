# -------- General settings {{{
#------------------------------

# set -g default-command "reattach-to-user-namespace -l zsh"
# tmux display things in 256 colors
set -g default-terminal "screen-256color"

# fix True 256 colors or something related to that
set -ga terminal-overrides ",xterm-256color:Tc"

set -g history-limit 20000

# stop automatic window rename
#set -g allow-rename off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set -sg escape-time 0

# Time in miliseconds between multiple commands to be considered as part
# of the same chain and, thus, not require another invocation of the
# <prefix>.  See the keybindings section below for all actions defined
# with the `-r` flag.
set -g repeat-time 300

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

# }}}
# -------- Key Bindings {{{
# -------------------------

# unbind default prefix and set it to Ctrl+a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# reload tmux configs
unbind r
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# quickly open a new window
bind N new-window

# tile all windows
unbind =
bind = select-layout tiled

# create new with with a prompt for window name
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# because we're using C-{h,j,k,l} to move between tabs, we set <prefix>-l to send
# the actual Ctrl+L to the shell for 'clear screen' functionality
bind l send-keys 'C-l'

# prefix key + Ctrl+W open tree with preview for choosing session
bind C-W choose-tree -Zs

# Alt+z - zoom in/out into the current pane. 
bind -n M-z resize-pane -Z

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}" # horizontal split active pane
bind - split-window -v -c "#{pane_current_path}" # vertical split active pane
bind \\ split-window -fh -c '#{pane_current_path}' # horizontal for whole screen
bind _ split-window -fv -c '#{pane_current_path}' # vertical for whole screen

# Create splits in PWD with Vim equivalent keys
bind -r v split-window -h -p 50 -c '#{pane_current_path}' # horizontally split active pane
bind -r s split-window -v -p 50 -c '#{pane_current_path}' # vertically split active pane
bind -r V split-window -fh -c '#{pane_current_path}' # horizontal for whole screen
bind -r S split-window -fv -c '#{pane_current_path}' # vertical for whole screen

# Toggle input sync across panes (displays status when invoked).  The
# use of <prefix>a is a mnemonic for "all".
#bind a set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"
bind a set-window-option synchronize-panes

# Alt-{h,l} or Alt-{Left,Right} to switch windows directly
bind -n M-h previous-window
bind -n M-l next-window
bind -n M-Left previous-window
bind -n M-Right next-window

# Alt+Shift+{Left,Right} move window to the left/right
bind -nr M-S-Left swap-window -t -1
bind -nr M-S-Right swap-window -t +1

# Switch windows using <prefix>-Arrow{left,right}.
bind Left select-pane -L
bind Down select-pane -D
bind Up select-pane -U
bind Right select-pane -R

# Resize panes with <prefix>Ctrl-{h,j,k,l}.  Omit/adjust the number for
# finer adjustments.
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# Alt+{H,J,K,L} aka Alt+Shift+{h,j,k,l} select pane
bind -nr M-H select-pane -L
bind -nr M-J select-pane -D
bind -nr M-K select-pane -U
bind -nr M-L select-pane -R

# Ctrl+{arrow keys} - select pane
bind -n C-Left select-pane -L
bind -n C-Down select-pane -D
bind -n C-Up select-pane -U
bind -n C-Right select-pane -R

# enable Mouse support for switching panes/windows
# setw -g mouse on
# set -g -q mouse on

# move with ctrl + left/right by word
set-window-option -g xterm-keys on

# }}}
# -------- Copy & Paste {{{
# -------------------------

# Note: for mouse copy, select the text while holding mouse button and press 'y' to copy it.
# This will affect the system clipboard as well. Then release the mouse button.

# Use VI keys for selection and copy - press 'v' to start selection, then 'y' to copy to the buffer
#setw -g mode-keys vi

# Enable 'Home' and 'End' navigation in copy mode
#bind -t vi-copy "Home" start-of-line
#bind -t vi-copy "End" end-of-line

# Add function to the copy to forward the buffer to system clipboard
#bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'

# Add another shortcut to be able to paste from local buffer as well as from system clipboard
#bind p run "xclip -o | tmux load-buffer - ; tmux paste-buffer"

# }}}
# -------- User Interface {{{
# -----------------------------------

# Title and window settings
# NOTE auto rename is disabled for the given window upon manual rename.
set -g set-titles on # string shown on titlebars or programs such as `xwininfo`
set -g set-titles-string "#T" # title format
set -g automatic-rename on # name windows with <prefix>, (sessions with <prefix>$)

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set -g aggressive-resize on # manpage says "on" is bad for shells…
set -g alternate-screen on

# Start indices from 1 for both windows and panes.  Makes it easier for
# direct navigation.  Also renumber windows.
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# Feedback (numbers represent miliseconds)
set -g display-panes-time 1200 # indicators for `display-panes` command
set -g display-time 1200 # use 0 to keep status line messages until key press

# Alerts
set -g monitor-bell on # check for terminal bell
set -g monitor-activity on # check for activity
set -g monitor-silence 0 # do not check for inactivity
set -g bell-action any # monitor all windows
set -g activity-action other # monitor activity in other windows NOTE DO NOT TRACK CURRENT
set -g silence-action none # this should have no effect when: monitor-silence off
set -g visual-activity on # show message, make no sound
set -g visual-bell on # show message, make no sound

# pane border
#set -g pane-border-style fg=black #base02
set -g pane-border-style fg=brightblue #base01
set -g pane-active-border-style fg=brightblue #base01

# message text
set -g message-style fg=brightblue,bg=black #orange and base01

# pane number display
set -g display-panes-active-colour blue #blue
set -g display-panes-colour brightred #orange

# clock
set -g clock-mode-style 24 # time format
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red

# }}}
# -------- Status bar {{{
# -----------------------

# Interval to update status bar in seconds.  Only affects some elements.
# Test on a case-by-case basis.  My setup is not affected.
set -g status-interval 15

# Status bar general options about placement and overall style.
set -g status on

# default statusbar colors
set -g status-style fg=yellow,bg=black #yellow and base02

set -g status-position bottom
set -g status-justify centre # this concerns the window list

# NOTE the status bar has three components: left, right, centre.  The
# latter is hard-coded to the window list component.  So instead of
# status-centre, we have to modify the `window-status` (see below).
set -g status-left-length "100"
set -g status-right-length "100"

# Window status.  Always placed in the centre if `status-justify
# "centre"`.  Otherwise it floats next to either of the two remaining
# components of the status bar.
#
# NOTE trigger alert to test bell: echo -e '\a'
set -g window-status-separator ""
set -g window-status-format " #I: #W #{?window_flags,#F , }"
set -g window-status-current-format "#[fg=brightblue]#[bg=black]#[fg=black]#[bg=brightblue] #I: #W #F #[fg=brightblue]#[bg=black]"
set -g window-status-activity-style ""
set -g window-status-bell-style "fg=colour1,bg=default"

# default window title colors
set-window-option -g window-status-style fg=brightblue,bg=default #base0 and default

# active window title colors
set-window-option -g window-status-current-style fg=brightred,bg=default #orange and default

set -g window-status-last-style ""

# Status left and right
set -g status-left "#[bg=black]#[fg=yellow]#{?client_prefix,#[fg=black]#[bg=green],#[bg=black]#[fg=yellow]} #S #{?client_prefix,#[bg=black]#[fg=green]#[fg=yellow]#[bg=black],}#[bold]#{?pane_synchronized,#[fg=colour5] 痢ON ,       }#{?pane_in_mode,#[fg=colour4] #{pane_mode}#{?selection_present, selecting,}#{?rectangle_toggle, rectangle,} ,}"
set -g status-right "#[fg=brightblue]   %m-%b-%Y #[fg=yellow]   %H:%M"

# }}}
# -------- Plugins {{{
# --------------------

set -g @plugin 'christoomey/vim-tmux-navigator'

# Note: this should be the last line in the config file
run -b `~/.tmux/plugins/tpm/tpm`

# }}}
