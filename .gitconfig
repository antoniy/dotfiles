# gitconfig
[user]
	name = Antoniy Chonkov
	email = antoniy@chonkov.net
	signingkey = 5F771733CEA1C20ADC135ED85708B391BD2997DC
[github]
    user = antoniy
#[init]
#    templatedir = ~/.dotfiles/git/templates
[alias]
    # list all aliases
    la = "!git config -l | grep alias | cut -c 7-"
    delete-merged-branches = "!f() { git checkout --quiet master && git branch --merged | grep --invert-match '\\*' | xargs -n 1 git branch --delete; git checkout --quiet @{-1}; }; f"
    diff = diff --ignore-space-at-eol -b -w --ignore-blank-lines
    cnv = commit --no-verify
    co = checkout
    cob = checkout -b
    s = status --short 
    st  = status
    br = branch -v
    up = "!f() { local remote; if [[ -z $1 ]]; then remote='origin'; else remote=$1; fi; git push $remote $(git rev-parse --abbrev-ref HEAD); }; f"

    new = "!f() { local branch=$(git rev-parse --abbrev-ref HEAD) remote; if [[ -z $1 ]]; then remote='origin'; else remote=$1; fi; echo $branch - $remote; git fetch && git log ^$branch $remote/$branch; } ; f"

#    get = "!git fetch && git merge "

    ac = !git add --all . && git commit

    ln = log --graph --abbrev-commit --decorate --pretty=format:'%C(bold blue)%h%Creset %C(yellow)(%cr)%Creset%C(green)%d%Creset %C(cyan)%an%Creset %s%Creset ' --abbrev-commit --date=relative
    l = log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' 
    # show a pretty log graph
    lg = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'

    # show what I did today
    day = "!sh -c 'git log --reverse --no-merges --branches=* --date=local --after=\"yesterday 11:59PM\" --author=\"`git config --get user.name`\"'"

    # order files by number of commits, ascending
    churn = "!f() { git log --all -M -C --name-only --format='format:' \"$@\" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print \"count\tfile\"} {print $1 \"\t\" $2}' | sort -g; }; f"

    # show all deleted files in the repo
    deleted = "!git log --diff-filter=D --summary | grep delete"

    # current branch
    cbr = rev-parse --abbrev-ref HEAD

    # show number of commits per contributer, sorted
    count = shortlog -sn

    undo = reset --soft HEAD~1
    amend = commit -a --amend

    cleanup = "!git remote prune origin && git gc && git clean -df && git stash clear"

    # rebase the current branch with changes from upstream remote
    update = !git fetch upstream && git rebase upstream/`git rev-parse --abbrev-ref HEAD`

    # tag aliases
    # show the last tag
    lt = describe --tags --abbrev=0

    # assume aliases
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"

    # IDEA commands
    dt = difftool -y -t IDEA
    mt = mergetool -y -t IDEA
    remotes = remote -v

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = auto
[color "branch"]
    current = green bold
    local = green
    remote = red bold
#[color "diff"]
#    meta = yellow bold
#    frag = magenta bold
#    old = red bold
#    new = green bold
[color "status"]
    added = green bold
    changed = yellow bold
    untracked = red
[color "sh"]
    branch = yellow
[push]
    # push will only do the current branch, not all branches
    default = current
[branch]
    # set up 'git pull' to rebase instead of merge
    # autosetuprebase = always
[diff]
    renames = copies
    mnemonicprefix = true
[difftool]
    prompt = false 
[apply]
    # do not warn about missing whitespace at EOF
    whitespace = nowarn
[core]
    excludesfile = ~/.gitignore_global
    pager = less -FXRS -x2
    editor = nvim
[rerere]
    enabled = true
[gitsh]
    defaultCommand = s
[grep]
    extendRegexp = true
    lineNumber = true
[credential]
	helper = osxkeychain
[difftool "IDEA"]
	cmd = ~/bin/idea.sh diff \"$LOCAL\" \"$REMOTE\"
[mergetool "IDEA"]
	cmd = ~/bin/idea.sh merge \"$LOCAL\" \"$REMOTE\" \"$BASE\" \"$MERGED\"
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[commit]
	gpgsign = true
[include]
    path = .gitconfig.local
